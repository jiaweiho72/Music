{"version":3,"sources":["index.tsx"],"names":["CircularProgressBase","value","initialValue","circleBackgroundColor","COLORS","TRANSPARENT","radius","duration","delay","maxValue","strokeLinecap","onAnimationComplete","activeStrokeColor","GREEN","activeStrokeSecondaryColor","activeStrokeWidth","inActiveStrokeColor","BLACK_30","inActiveStrokeWidth","inActiveStrokeOpacity","clockwise","rotation","dashedStrokeConfig","count","width","children","animatedCircleProps","styleProps","container","rotatingContainer","StyleSheet","absoluteFillObject","valueContainer"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGA,MAAMA,oBAAyD,GAAG,QAoBjC;AAAA,MApBkC;AACjEC,IAAAA,KADiE;AAEjEC,IAAAA,YAAY,GAAG,CAFkD;AAGjEC,IAAAA,qBAAqB,GAAGC,gBAAOC,WAHkC;AAIjEC,IAAAA,MAAM,GAAG,EAJwD;AAKjEC,IAAAA,QAAQ,GAAG,GALsD;AAMjEC,IAAAA,KAAK,GAAG,CANyD;AAOjEC,IAAAA,QAAQ,GAAG,GAPsD;AAQjEC,IAAAA,aAAa,GAAG,OARiD;AASjEC,IAAAA,mBAAmB,GAAG,MAAM,IATqC;AAUjEC,IAAAA,iBAAiB,GAAGR,gBAAOS,KAVsC;AAWjEC,IAAAA,0BAA0B,GAAG,IAXoC;AAYjEC,IAAAA,iBAAiB,GAAG,EAZ6C;AAajEC,IAAAA,mBAAmB,GAAGZ,gBAAOa,QAboC;AAcjEC,IAAAA,mBAAmB,GAAG,EAd2C;AAejEC,IAAAA,qBAAqB,GAAG,CAfyC;AAgBjEC,IAAAA,SAAS,GAAG,IAhBqD;AAiBjEC,IAAAA,QAAQ,GAAG,CAjBsD;AAkBjEC,IAAAA,kBAAkB,GAAG;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KAlB4C;AAmBjEC,IAAAA;AAnBiE,GAoBlC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAA0B,+BAAiB;AAC/CxB,IAAAA,YAD+C;AAE/CI,IAAAA,MAF+C;AAG/CG,IAAAA,QAH+C;AAI/CW,IAAAA,SAJ+C;AAK/CZ,IAAAA,KAL+C;AAM/CP,IAAAA,KAN+C;AAO/CM,IAAAA,QAP+C;AAQ/CI,IAAAA,mBAR+C;AAS/CI,IAAAA,iBAT+C;AAU/CG,IAAAA;AAV+C,GAAjB,CAAhC;AAaA,QAAMS,UAAU,GAAG,oBACjB,OAAO;AACLrB,IAAAA,MADK;AAELe,IAAAA;AAFK,GAAP,CADiB,EAKjB,CAACf,MAAD,EAASe,QAAT,CALiB,CAAnB;AAQA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,qBAAOM,UAAP,EAAmBC;AAAhC,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,qBAAOD,UAAP,EAAmBE;AAAhC,kBACE,6BAAC,uBAAD;AACE,IAAA,qBAAqB,EAAE1B,qBADzB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,aAAa,EAAEI,aAHjB;AAIE,IAAA,iBAAiB,EAAEE,iBAJrB;AAKE,IAAA,0BAA0B,EAAEE,0BAL9B;AAME,IAAA,iBAAiB,EAAEC,iBANrB;AAOE,IAAA,mBAAmB,EAAEC,mBAPvB;AAQE,IAAA,mBAAmB,EAAEE,mBARvB;AASE,IAAA,qBAAqB,EAAEC,qBATzB;AAUE,IAAA,mBAAmB,EAAEO,mBAVvB;AAWE,IAAA,kBAAkB,EAAEJ;AAXtB,IADF,CADF,eAgBE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLQ,wBAAWC,kBADN,EAEL,qBAAOJ,UAAP,EAAmBK,cAFd;AADT,KAMGP,QANH,CAhBF,CADF;AA2BD,CArED;;eAuEezB,oB","sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport ProgressCircle from '../components/progressCircle';\nimport useAnimatedValue from '../hooks/useAnimatedValue';\nimport COLORS from '../utils/colors';\nimport styles from './styles';\nimport type { CircularProgressBaseProps } from '../types';\n\nconst CircularProgressBase: React.FC<CircularProgressBaseProps> = ({\n  value,\n  initialValue = 0,\n  circleBackgroundColor = COLORS.TRANSPARENT,\n  radius = 60,\n  duration = 500,\n  delay = 0,\n  maxValue = 100,\n  strokeLinecap = 'round',\n  onAnimationComplete = () => null,\n  activeStrokeColor = COLORS.GREEN,\n  activeStrokeSecondaryColor = null,\n  activeStrokeWidth = 10,\n  inActiveStrokeColor = COLORS.BLACK_30,\n  inActiveStrokeWidth = 10,\n  inActiveStrokeOpacity = 1,\n  clockwise = true,\n  rotation = 0,\n  dashedStrokeConfig = { count: 0, width: 0 },\n  children,\n}: CircularProgressBaseProps) => {\n  const { animatedCircleProps } = useAnimatedValue({\n    initialValue,\n    radius,\n    maxValue,\n    clockwise,\n    delay,\n    value,\n    duration,\n    onAnimationComplete,\n    activeStrokeWidth,\n    inActiveStrokeWidth,\n  });\n\n  const styleProps = useMemo(\n    () => ({\n      radius,\n      rotation,\n    }),\n    [radius, rotation]\n  );\n\n  return (\n    <View style={styles(styleProps).container}>\n      <View style={styles(styleProps).rotatingContainer}>\n        <ProgressCircle\n          circleBackgroundColor={circleBackgroundColor}\n          radius={radius}\n          strokeLinecap={strokeLinecap}\n          activeStrokeColor={activeStrokeColor}\n          activeStrokeSecondaryColor={activeStrokeSecondaryColor}\n          activeStrokeWidth={activeStrokeWidth}\n          inActiveStrokeColor={inActiveStrokeColor}\n          inActiveStrokeWidth={inActiveStrokeWidth}\n          inActiveStrokeOpacity={inActiveStrokeOpacity}\n          animatedCircleProps={animatedCircleProps}\n          dashedStrokeConfig={dashedStrokeConfig}\n        />\n      </View>\n      <View\n        style={[\n          StyleSheet.absoluteFillObject,\n          styles(styleProps).valueContainer,\n        ]}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n\nexport default CircularProgressBase;\n"]}